var IE = false;

var mobilecheck = function() {
  var check = false;
  (function(a){if(/(android|bb\d+|meego).+mobile|android|iphone|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od|ad)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0,4)))check = true})(navigator.userAgent||navigator.vendor||window.opera);
  return check; 
}

if((navigator.appName.indexOf("Internet Explorer")>-1) || 
    ((navigator.appName == "Netscape") && (navigator.appVersion.indexOf('Trident') > -1))){
  
  console.log("IE");
  IE=true;
}

// if(!window.console) window.console = {log:function(){}};

(function(actions){
  var append            = "";

  var obf_domain        = ""; // domain of Online Booking Form iframe
  var obf_parent_domain = ""; // main url of Online Booking Form parent
  var obf_append        = ""; // query string for obf request

  if(window.location.protocol === "https:")
    append = "?secure=true";

  if(document.getElementById("gtm-domain-logo") && document.domain){
    var obf_parent_url = document.getElementById("gtm-domain-logo").getAttribute('href');
    obf_domain         = document.domain;

    if(window.location.protocol === "https:" && obf_parent_url.match('https:'))
      obf_append = "?obf_secure=true&obf_parent_secure=true";
    else if(window.location.protocol === "https:" && !(obf_parent_url.match('https:')))
      obf_append = "?obf_secure=true";
    else if(window.location.protocol != "https:" && obf_parent_url.match('https:'))
      obf_append = '?obf_parent_secure=true';

    if(obf_parent_url.indexOf("://") > -1) {
      obf_parent_domain = obf_parent_url.split('/')[2];
    } else {
      obf_parent_domain = obf_parent_url.split('/')[0];
    }
  }


  // Collecting 'start chat' buttons
  var chatBtns = actions.buttons = document.getElementsByClassName('chatOpenButton');
  chatBtns = Array.prototype.slice.call(chatBtns);
  // And if the are on page, do some specific stuff  
  
  
  var listener, isMobile = mobilecheck();

  if(chatBtns.length>0){

    // Binding different click listeners for mobile and non mobile devices
    if(isMobile){
      listener = function(e){
        if(obf_domain != "" && obf_parent_domain != ""){
          window.location.href = window.chatID?(actions.chatOrigin+"/client/"+window.chatID):(actions.chatOrigin+"/client/obf/"+obf_domain+"/"+obf_parent_domain+obf_append);
        }else{
          window.location.href = window.chatID?(actions.chatOrigin+"/client/"+window.chatID):(actions.chatOrigin+"/client/domain/"+window.location.host+append);
        }
      };
      for(var i=0;i<chatBtns.length;i++){
        var button = chatBtns[i];
        button.className = button.className.replace("chatInactive", "chatMobile");
      }
    }
    else{
      listener = function(e){
        // If actions.initialized flag is set, we have minimum 1 message recieved from chat application
        // It means that chat application is live and is connected to server

        // If initialize flag is not set, generating and dispatching custom 'error' event
        // when chat button is clicked
        if(!actions.initialized) return e.target.dispatchEvent(new Event('error'));
        
        // Otherwise, showing the frame and sending 'showChat' sygnal to chat application in iframe
        actions.iframe.style.display = "block";
        actions.sendMessage("showChat");
      }

    }


    Array.prototype.forEach.call(chatBtns, function(btn){
      btn.addEventListener("click", listener);
    });
  }

  if(isMobile){
    var eyeCatcherURL = actions.chatOrigin+"/client/mobile-eye-catcher/"+window.location.host+append;
    actions.getMobileEyeCatcher(eyeCatcherURL, function(err, eyeCatcher){
      var div = document.createElement('div');
      var img = document.createElement('img');
      div.className = "mobileChat";
      img.src = actions.chatOrigin+eyeCatcher.image;
      img.className = "mobile-eye-catcher animation-"+eyeCatcher.animation;

      img.addEventListener("click", listener || function(e){
        if(obf_domain != "" && obf_parent_domain != ""){
          window.location.href = window.chatID?(actions.chatOrigin+"/client/"+window.chatID):(actions.chatOrigin+"/client/obf/"+obf_domain+"/"+obf_parent_domain+obf_append);
        }else{
          window.location.href = window.chatID?(actions.chatOrigin+"/client/"+window.chatID):(actions.chatOrigin+"/client/domain/"+window.location.host+append);
        }
      });

      div.appendChild(img)
      document.body.appendChild(div);
    });

     actions.addMobileCatcherStyle();

    return;
  }

  var uri = actions.chatOrigin;

  if(obf_domain != "" && obf_parent_domain != ""){
    if(window.chatID) 
      uri += "/client/" + chatID;
    else              
      uri += "/client/obf/" + obf_domain + "/" + obf_parent_domain + obf_append;
  }else{
    if(window.chatID) 
      uri += "/client/" + chatID;
    else              
      uri += "/client/domain/" + window.location.host + append;
  }

  actions.createFrame(uri);
  
  if(chatBtns.length>0) actions.iframe.style.display = "none";
  
  actions.extend(actions.iframe.style, { position: "fixed", "border": "0px" });
  // z-index issue workararond
  actions.iframe.style['z-index'] = actions.iframe.style.zIndex = 10000;
  
  document.getElementsByTagName('body')[0].appendChild(actions.iframe);
}({
  // This object is 'actions' in scope function above

  // Helper function, same as underscore's _.extend
  extend: function(target, source){  for(key in source) target[key] = source[key]; return target; },
  
  // Domain and port providing chat service
  chatOrigin: (IE ? window.location.protocol : "https:") + "//chat.mochapp.com",
  options:{},    // Not used for now

  // Initialization function
  // Binds listeners for communication between chat iframe and loaded page
  init: function(){
    var self = this;
    var once = false;

    (window.addEventListener || window.attachEvent)("message", function(event){
      // First - who sends the message
      // Allow onli messages from iframe with origin same as actions.chatOrigin
      if(event.origin !== self.chatOrigin) return;

      // If chat buttons are present on page, call actiavteButtons methods and ensure that it will be called only once
      if(!once && self.buttons.length>0) self.actiavteButtons(); once = true, self.initialized = true;
      
      var data = event.data
      if(typeof data === "string") {data = JSON.parse(data);} // Some IE versions can send only string data
      if(!self.chat) self.chat = event.source;                // Set actions.chat variable that points to chat iframe's document object
      
      // In this case, chat iframe's javascript sends execute callback sygnal
      if(data._cb){
        var callback = self.callbacks[data._cb];
        callback && callback(data.error, data.body);
        delete self.callbacks[data._cb];
      }

      // In this case, chat's iframe sends request message and keeps callback which will be called from here
      else if(data.cb){
        var callback = function(err, body){
          self.chat.postMessage({
            _cb: data.cb,
            body: body,
            error: err
          }, self.chatOrigin);
        };

        // Check if requested action exists in actions object and if so - execute it, giving generated callback
        if(typeof self[data.action] === "function") self[data.action](data.body, callback);
      }

      // If callback is not present, giving emoty function as callback to prevent some errors
      else if(typeof self[data.action] === "function") self[data.action](data.body, function(){/*console.error("Some error")*/});
    });
  },

  createFrame: function(uri){
    var self = this;
    this.iframe = this.extend(document.createElement('iframe'), { 
      src: uri,
      id: "chatFrame",
//      onload: function(){ self.init(); }
    });
    this.init();
  },

  // This object keeps callbacks
  callbacks:{},
  // This counter increments to provide unique id for every callback
  cb_counter: 0,

  // Sends message to chat's iframe 
  sendMessage: function(action, body, cb){
    var msg = { action: action, body: body };
    if(typeof cb == "function"){                    // If callback is present
      var cb_id = "cb_"+(this.cb_counter++);        // Create prefixed unique id for it
      msg.cb = cb_id;                               // Add generated callback id to the object that will be sent to chat's iframe
      this.callbacks[cb_id] = cb;                   // Keep callback function in callback keeper, using generated id as key
    }
    this.chat.postMessage(msg, this.chatOrigin);    // Finally - send the message object to the iframe
  },
  
  // If this code is loaded on mobile device, it will not load chat in iframe
  // It will navigate directly to chat url
  mobileNavigate: function(){
    var chatSrc = this.iframe.src;
    window.location.href = chatSrc;
  },

  // Chat iframe javascript app sends the the specific css for the chat window
  // This function handles and applies the style for the iframe
  // It finds (or creates) style tag and fills it with some css code
  style: function(body, cb){

    var styleTag = document.getElementById("chatStyle");
    if(styleTag){
      body += ".chatForm{width: 298px;position: absolute;bottom: 15px;left: 3%;";
      styleTag.innerHTML = body;
    }
    else{
      styleTag=document.createElement("style");
      body += ".chatForm{width: 298px;position: absolute;bottom: 15px;left: 3%;";
      styleTag.id="chatStyle";
      styleTag.innerHTML = body;
      document.getElementsByTagName("head")[0].appendChild(styleTag);
    }
  },

  addMobileCatcherStyle: function(){

    this.style("\
    .mobileChat{\
        /*display: none;*/\
        z-index: 10001;\
        width: 80px;   \
        position: fixed;\
        right: 10px;\
        bottom: 5px; \
      }\
      .mobile-eye-catcher {\
        position: absolute;\
        bottom: 25%;\
        max-width: 100%;\
      }\
      @-webkit-keyframes bounce {\
        0%, 20%, 53%, 80%, 100% {\
          -webkit-transition-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);\
          transition-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);\
          -webkit-transform: translate3d(0,0,0);\
          transform: translate3d(0,0,0);\
        }\
        40%, 43% {\
          -webkit-transition-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);\
          transition-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);\
          -webkit-transform: translate3d(0, -30px, 0);\
          transform: translate3d(0, -30px, 0);\
        }\
        70% {\
          -webkit-transition-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);\
          transition-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);\
          -webkit-transform: translate3d(0, -15px, 0);\
          transform: translate3d(0, -15px, 0);\
        }\
        90% {\
          -webkit-transform: translate3d(0,-4px,0);\
          transform: translate3d(0,-4px,0);\
        }\
      }\
      @keyframes bounce {\
        0%, 20%, 53%, 80%, 100% {\
          -webkit-transition-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);\
          transition-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);\
          -webkit-transform: translate3d(0,0,0);\
          transform: translate3d(0,0,0);\
        }\
        40%, 43% {\
          -webkit-transition-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);\
          transition-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);\
          -webkit-transform: translate3d(0, -30px, 0);\
          transform: translate3d(0, -30px, 0);\
        }\
        70% {\
          -webkit-transition-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);\
          transition-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);\
          -webkit-transform: translate3d(0, -15px, 0);\
          transform: translate3d(0, -15px, 0);\
        }\
        90% {\
          -webkit-transform: translate3d(0,-4px,0);\
          transform: translate3d(0,-4px,0);\
        }\
      }\
      @keyframes \"pulse2\" {\
       0% {\
          -webkit-transform: scale(1.1);\
          -moz-transform: scale(1.1);\
          -o-transform: scale(1.1);\
          -ms-transform: scale(1.1);\
          transform: scale(1.1);\
       }\
       50% {\
          -webkit-transform: scale(0.8);\
          -moz-transform: scale(0.8);\
          -o-transform: scale(0.8);\
          -ms-transform: scale(0.8);\
          transform: scale(0.8);\
       }\
       100% {\
          -webkit-transform: scale(1);\
          -moz-transform: scale(1);\
          -o-transform: scale(1);\
          -ms-transform: scale(1);\
          transform: scale(1);\
        }\
      }\
      @-moz-keyframes pulse2 {\
       0% {\
         -moz-transform: scale(1.1);\
         transform: scale(1.1);\
       }\
       50% {\
         -moz-transform: scale(0.8);\
         transform: scale(0.8);\
       }\
       100% {\
         -moz-transform: scale(1);\
         transform: scale(1);\
        }\
      }\
      @-webkit-keyframes \"pulse2\" {\
       0% {\
         -webkit-transform: scale(1.1);\
         transform: scale(1.1);\
       }\
       50% {\
         -webkit-transform: scale(0.8);\
         transform: scale(0.8);\
       }\
       100% {\
         -webkit-transform: scale(1);\
         transform: scale(1);\
        }\
      }\
      @-ms-keyframes \"pulse2\" {\
       0% {\
         -ms-transform: scale(1.1);\
         transform: scale(1.1);\
       }\
       50% {\
         -ms-transform: scale(0.8);\
         transform: scale(0.8);\
       }\
       100% {\
         -ms-transform: scale(1);\
         transform: scale(1);\
        }\
      }\
      .animation-bounce {\
        -webkit-animation: bounce 1.5s;\
        -webkit-animation-iteration-count: infinite;\
        -moz-animation: bounce 1.5s;\
        -moz-animation-iteration-count: infinite;\
        -o-animation: bounce 1.5s;\
        -o-animation-iteration-count: infinite;\
        animation: bounce 1.5s;\
        animation-iteration-count: infinite;\
      }\
      .animation-pulse {\
        -webkit-animation: pulse2 1.5s;\
        -webkit-animation-iteration-count: infinite;\
        -moz-animation: pulse2 1.5s;\
        -moz-animation-iteration-count: infinite;\
        -o-animation: pulse2 1.5s;\
        -o-animation-iteration-count: infinite;\
        animation: pulse2 1.5s;\
        animation-iteration-count: infinite;\
      }");
  },
  
  showChat: function(){
    this.iframe.style.display = "block";
  },


  // Chat code reports some piwik events
  trackEvent: function(event, cb){
    try{if(_paq) _paq.push(['trackEvent', 'Chat', event]);}
    catch(err){}
  },


  // Chat application needs full url to track specific ppc urls
  getFullURL: function(body, cb){
    var links = document.getElementsByTagName('a');
    var tel;
    links = Array.prototype.slice.call(links);
    for(var i=0;i<links.length;i++){
      if(links[i].href.indexOf('tel:') === 0){
        tel = links[i].href;
        break;
      }
    }
    cb(null, {url: window.location.href, tel: tel});
  },
 
  // Chat application may set some options
  options: function(body){
    this.extend(this.options, body);
  },


  // If chat buttons are present, just replace class 'chatInactive' with 'chatActive'
  actiavteButtons: function(){
    for(var i=0;i<this.buttons.length;i++){
      var button = this.buttons[i];
      button.className = button.className.replace("chatInactive", "chatActive"); 
    }
  },

  destroy: function(){

   this.iframe.remove();
  },

  getMobileEyeCatcher: function(url, callback){
    var xhr;
     
    if(typeof XMLHttpRequest !== 'undefined') xhr = new XMLHttpRequest();
    else {
        var versions = ["MSXML2.XmlHttp.5.0", 
                        "MSXML2.XmlHttp.4.0",
                        "MSXML2.XmlHttp.3.0", 
                        "MSXML2.XmlHttp.2.0",
                        "Microsoft.XmlHttp"]

         for(var i = 0, len = versions.length; i < len; i++) {
            try {
                xhr = new ActiveXObject(versions[i]);
                break;
            }
            catch(e){}
         } // end for
    }
     
    xhr.onreadystatechange = ensureReadiness;
     
    function ensureReadiness() {
        if(xhr.readyState < 4) {
            return;
        }
         


        // all is well  
        if(xhr.readyState === 4) {
          if(xhr.status !== 200) {
            return callback(xhr.responseText);
          }
          callback(null, JSON.parse(xhr.responseText));
        }           
    }
     
    xhr.open('GET', url, true);
    xhr.send('');
  },
}));

